searchState.loadedDescShard("honeycomb", 0, "honeycomb\ncommonly used items\nGeneric attribute trait\nGeneric attribute trait\n<code>OrbitPolicy</code> determining the kind of topological entity to …\nThe meta section of the file is incorrect.\nA value could not be parsed.\nSpecified VTK file contains inconsistent data.\nBuilder-level error enum\n2D combinatorial map implementation\nCombinatorial map builder structure\nCoordinates-level error enum\nGeneric FP type trait\nOrdered array of beta functions defining the orbit.\nDart ID representation type\nThe file contains a duplicated section.\n1-cell orbit.\nEdge ID representation type\n2-cell orbit.\nFace ID representation type\n2-cell orbit, without using beta 0. Incorrect if the cell …\nGrid description used by the map builder\nIdentifier type of the entity the attribute is bound to.\nThe file contains contradicting data.\nOne or multiple of the specified grid characteristics are …\nError returned when trying to compute the normal to a null …\nError returned when trying to compute the unit vector of a …\nThe builder is missing one or multiple parameters to …\nA required section is missing from the file.\nNull dart ID value\nNull edge ID value\nNull face ID value\nNull vertex ID value\nNull volume ID value\nOrbit search policy enum\nStorage type used for the attribute.\nThe file contains an unrecognized section header.\nSpecified VTK file contains unsupported data.\n2D vector structure\n0-cell orbit.\n2D vertex structure\nVertex ID representation type\n0-cell orbit, without using beta 0. Incorrect if the cell …\n3-cell orbit.\nVolume ID representation type\n3-cell orbit, without using beta 0. Incorrect if the cell …\nAdd the attribute <code>A</code> to the attributes the created map will …\nAdd a new free dart to the map.\nAdd <code>n_darts</code> new free darts to the map.\nCompute the mid-point between two vertices.\nReturn  β<code>I</code>(<code>dart_id</code>).\nReturn  β<code>i</code>(<code>dart_id</code>).\nReturn  β<code>i</code>(<code>dart_id</code>).\nReturn  β<code>I</code>(<code>dart_id</code>).\nConsumes the builder and produce a combinatorial map …\nCell insertion functions\nReturn the dot product between <code>self</code> and <code>other</code>.\nCompute the ID of the edge a given dart is part of.\nCompute the ID of the edge a given dart is part of.\nCompute the ID of the face a given dart is part of.\nCompute the ID of the face a given dart is part of.\n<code>I</code>-link operator.\nReturn the attribute <code>A</code> value associated to a given …\nRead the vertex associated to a given identifier.\nRemove the attribute <code>A</code> value associated to a given …\nRemove the vertex associated to a given identifier and …\n<code>I</code>-sew operator.\n<code>I</code>-unlink operator.\n<code>I</code>-unsew operator.\nReplace the attribute <code>A</code> value associated to a given …\nReplace the vertex associated to a given identifier and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a builder structure from a <code>cmap</code> file.\nCreate a builder structure from a <code>GridDescriptor</code>.\nCreate a builder structure for a map with a set number of …\nCreate a builder structure from a VTK file.\n<em>grisubal</em> algorithm description &amp; implementation\nCreate a <code>CMapBuilder</code> with a predefinite <code>GridDescriptor</code> …\nReturn the orbit defined by a dart and its <code>I</code>-cell.\nInsert a new free dart in the map.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume <code>self</code> to return inner values.\nConsume <code>self</code> to return inner values.\nCheck if a given dart is <code>i</code>-free, for all <code>i</code>.\nCheck if a given dart is <code>I</code>-free.\nReturn whether a given dart is unused or not.\nReturn whether a given dart is unused or not.\nReturn an iterator over IDs of all the map’s edges.\nReturn an iterator over IDs of all the map’s faces.\nReturn an iterator over IDs of all the map’s vertices.\nSet values for all dimensions\nSet values for all dimensions\n<code>I</code>-link operator.\nMerging routine, i.e. how to obtain a new value from two …\nFallback merging routine, i.e. how to obtain a new value …\nFallback merging routine, i.e. how to obtain a new value …\nSet values for all dimensions\nReturn the current number of darts.\nReturn the current number of unused darts.\nReturn the current number of vertices.\nCompute the norm of <code>self</code>.\nCompute the direction of the normal vector to <code>self</code> as a …\nGeneric orbit implementation.\nGeneric orbit transactional implementation.\nSet origin (most bottom-left vertex) of the grid\nReturn the attribute <code>A</code> value associated to a given …\nReturn the vertex associated to a given identifier.\nRemove the attribute <code>A</code> value associated to a given …\nRemove the attribute <code>A</code>’s storage from the map.\nRemove a free dart from the map.\nRemove the vertex associated to a given identifier and …\nMain rendering function.\nSerialize the map under a custom format.\nSet the value of β<code>I</code>(<code>dart_id</code>) to <code>new_val</code>.\nSet the values of the beta functions of a dart.\n<code>I</code>-sew operator.\nSplitting routine, i.e. how to obtain the two new values …\nIndicate whether to split quads of the grid\nFallback splitting routine, i.e. how to obtain two new …\n<strong>UNIMPLEMENTED</strong>\nGenerate a legacy VTK file from the map.\nGenerate a legacy VTK file from the map.\nPolygon triangulation functions\nCompute the direction of <code>self</code> as a unit vector.\nCreate a <code>CMapBuilder</code> with a predefinite <code>GridDescriptor</code> …\nCreate a <code>CMapBuilder</code> with a predefinite <code>GridDescriptor</code> …\nReturn a unit vector along the <code>x</code> axis.\nReturn a unit vector along the <code>y</code> axis.\n<code>I</code>-unlink operator.\n<code>I</code>-unsew operator.\nCompute the ID of the vertex a given dart is part of.\nCompute the ID of the vertex a given dart is part of.\nReplace the attribute <code>A</code> value associated to a given …\nReplace the vertex associated to a given identifier and …\nReturn the value of the <code>x</code> coordinate of the vector.\nReturn the value of the <code>x</code> coordinate of the vertex.\nReturn the value of the <code>y</code> coordinate of the vector.\nReturn the value of the <code>y</code> coordinate of the vertex.\nA core operation failed.\nDarts passed to the function do not match requirements.\nOne or both vertices of the edge are undefined.\nRelative position of the new vertex isn’t located on the …\nError-modeling enum for vertex insertion routines.\nThe number of darts passed to create the new segments is …\nReturns the argument unchanged.\nInsert a vertex in an edge, cutting it into two segments.\nInsert <code>n</code> vertices in an edge, cutting it into <code>n+1</code> segments.\nCalls <code>U::from(self)</code>.\nThe VTK file used to try to build a <code>Geometry2</code> object …\nPost-processing clip operation.\nEnum used to model potential errors of the <code>grisubal</code> kernel.\nAn orientation issue has been detected in the input …\nThe specified geometry does not match one (or more) …\nClip elements located on the left side of the oriented …\nKeep all elements. Default value.\nClip elements located on the right side of the oriented …\nThe VTK file used to try to build a <code>Geometry2</code> object …\nReturns the argument unchanged.\nReturns the argument unchanged.\nMain algorithm call function.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe face to triangulate is already a triangle.\nThe face has no ear to use for triangulation using the ear …\nThe face is not fannable, i.e. there is no “star” …\nThe number of darts passed to create the new segments is …\nAn internal sew or link failed\nThe number of darts passed to create the new segments is …\nError-modeling enum for triangulation routines.\nThe face is not fit for triangulation. The <code>String</code> contains …\nChecks if a face meets the requirements for triangulation.\nTriangulates a face using the ear clipping method.\nTriangulates a face using the ear clipping method.\nTriangulates a face using a fan triangulation method.\nTriangulates a face using a fan triangulation method.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")