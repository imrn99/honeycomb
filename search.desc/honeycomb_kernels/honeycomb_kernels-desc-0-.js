searchState.loadedDescShard("honeycomb_kernels", 0, "honeycomb-kernels\nCell insertion functions\n<em>grisubal</em> algorithm description &amp; implementation\nremeshing routine components\nSkewness computation routines.\nPolygon triangulation functions\nA core operation failed.\nDarts passed to the function do not match requirements.\nOne or both vertices of the edge are undefined.\nRelative position of the new vertex isn’t located on the …\nError-modeling enum for vertex insertion routines.\nThe number of darts passed to create the new segments is …\nReturns the argument unchanged.\nInsert a vertex in an edge, cutting it into two segments.\nInsert <code>n</code> vertices in an edge, cutting it into <code>n+1</code> segments.\nCalls <code>U::from(self)</code>.\nThe VTK file used to try to build a <code>Geometry2</code> object …\nPost-processing clip operation.\nEnum used to model potential errors of the <code>grisubal</code> kernel.\nAn orientation issue has been detected in the input …\nThe specified geometry does not match one (or more) …\nClip elements located on the left side of the oriented …\nKeep all elements. Default value.\nClip elements located on the right side of the oriented …\nThe VTK file used to try to build a <code>Geometry2</code> object …\nReturns the argument unchanged.\nReturns the argument unchanged.\nMain algorithm call function.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOne or both of the cells adjacent to the edge are not …\nVertex is linked to a 3D body.\nVertex is linked to a 3D body.\nVertex is linked to a 3D body.\nVertex is linked to a curve.\nVertex is linked to a curve.\nGeometrical mesh anchor.\nError-modeling enum for edge swap routine.\nGeometrical mesh anchor.\nA core operation failed.\nThe edge passed as argument is made of single dart, hence …\nVertex is linked to a node.\nThe edge passed as argument is null.\nVertex is linked to a surface.\nVertex is linked to a surface.\nVertex is linked to a surface.\nGeometrical mesh anchor.\nCut an edge in half and build triangles from the new …\nCut an edge in half and build triangles from the new …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMove a vertex to the average of the others’ values.\nTip over an edge shared by two triangles.\nReturn the skewness of a given face.\nReturn the skewness of a given face.\nThe face to triangulate is already a triangle.\nThe face has no ear to use for triangulation using the ear …\nThe face is not fannable, i.e. there is no “star” …\nThe number of darts passed to create the new segments is …\nAn internal sew or link failed\nThe number of darts passed to create the new segments is …\nError-modeling enum for triangulation routines.\nThe face is not fit for triangulation. The <code>String</code> contains …\nChecks if a face meets the requirements for triangulation.\nTriangulates a face using the ear clipping method.\nTriangulates a face using the ear clipping method.\nTriangulates a face using a fan triangulation method.\nTriangulates a face using a fan triangulation method.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")