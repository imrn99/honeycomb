searchState.loadedDescShard("honeycomb_benches", 0, "honeycomb-benches\nDescription\nHoneycomb benchmarks binary\nEdge size reduction in triangular meshes using vertex/edge …\n2D grid generation using <code>CMapBuilder</code> and <code>GridDescriptor</code>\n<code>grisubal</code> kernel execution\nSimple vertex relaxation routine\nExecution backend; number of threads used is determined …\nIf present, clip cells on one side of the captured boundary\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInput map as a VTK file\nInput mesh as a VTK file\nInput map as a VTK file\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLength of cells along the X-axis\nLength of cells along the X-axis of the overlapping grid\nLength of cells along the Y-axis\nLength of cells along the Y-axis of the overlapping grid\nNumber of applications of the relaxation algorithm\nUNIMPLEMENTED - Use a partitioning algorithm to avoid …\nNumber of cells along the X-axis\nNumber of cells along the Y-axis\nSerialize the map returned by the benchmark, if applicable\nExecute benchmarks using <code>f32</code> instead of the default <code>f64</code>\nIf present, split diagonal according to the specified …\nTarget threshold for edge length; any edge equal or above …\nFloating-point type alias.")